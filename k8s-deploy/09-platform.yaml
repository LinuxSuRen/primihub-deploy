
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: platform1
  namespace: $NAMESPACE
  labels:
    name: platform1
spec:
  replicas: 1
  selector:
    matchLabels:
      name: platform1
  template:
    metadata:
      labels:
        name: platform1
    spec:
      volumes:
        - name: volume-nginx1-conf
          configMap:
            name: nginx1-conf
            items:
              - key: default.conf
                path: default.conf
            defaultMode: 420
      containers:
        - name: platform1
          image: $PLATFORM_IMAGE
          ports:
            - name: nginx1
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: volume-nginx1-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 100%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 20

---
kind: Service
apiVersion: v1
metadata:
  name: platform1
  namespace: $NAMESPACE
  labels:
    name: platform1
spec:
  ports:
    - name: nginx1
      protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30801
  selector:
    name: platform1
  type: NodePort
  sessionAffinity: None
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx1-conf
  namespace: $NAMESPACE
data:
  default.conf: "server {\n    listen       80;\n    server_name  localhost;\n    #charset koi8-r;\n    #access_log  logs/host.access.log  main;\n    location / {\n        root   /usr/local/nginx/html;\n        index  index.html index.htm;\n        try_files $uri $uri/ /index.html;\n    }\n    \n    location  ^~ /prod-api/ {\n    \tproxy_pass http://gateway1.$NAMESPACE.svc.cluster.local:8080/;\n    }\n\n\terror_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   html;\n    }\n}\n"



---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: platform2
  namespace: $NAMESPACE
  labels:
    name: platform2
spec:
  replicas: 1
  selector:
    matchLabels:
      name: platform2
  template:
    metadata:
      labels:
        name: platform2
    spec:
      volumes:
        - name: volume-nginx2-conf
          configMap:
            name: nginx2-conf
            items:
              - key: default.conf
                path: default.conf
            defaultMode: 420
      containers:
        - name: platform2
          image: $PLATFORM_IMAGE
          ports:
            - name: nginx2
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: volume-nginx2-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 100%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 20

---
kind: Service
apiVersion: v1
metadata:
  name: platform2
  namespace: $NAMESPACE
  labels:
    name: platform2
spec:
  ports:
    - name: nginx2
      protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30802
  selector:
    name: platform2
  type: NodePort
  sessionAffinity: None
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx2-conf
  namespace: $NAMESPACE
data:
  default.conf: "server {\n    listen       80;\n    server_name  localhost;\n    #charset koi8-r;\n    #access_log  logs/host.access.log  main;\n    location / {\n        root   /usr/local/nginx/html;\n        index  index.html index.htm;\n        try_files $uri $uri/ /index.html;\n    }\n    \n    location  ^~ /prod-api/ {\n    \tproxy_pass http://gateway2.$NAMESPACE.svc.cluster.local:8080/;\n    }\n\n\terror_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   html;\n    }\n}\n"

